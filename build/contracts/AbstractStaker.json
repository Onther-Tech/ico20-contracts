{
  "contractName": "AbstractStaker",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paytoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardClaimedTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStartBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releasedBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releasedAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "released",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paytoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardClaimedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"title\":\"The connector that integrates zkopru and tokamak\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/zena/ico2.0/ico20-contracts/contracts/connection/AbstractStaker.sol\":\"AbstractStaker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/zena/ico2.0/ico20-contracts/contracts/connection/AbstractStaker.sol\":{\"keccak256\":\"0xc9d08ea670cb861afd2c3c9b326015c747c6189a0d67a3467e25a155c084b18e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d88ff078836d8bde0331e48a286d0cd00026d3e68f4646a3b20733a5e8452d8\",\"dweb:/ipfs/QmW8YDFXZkBGjhHG67VzN3bfJMyRzsr14j3mF14t6uv66E\"]},\"/Users/zena/ico2.0/ico20-contracts/contracts/libraries/LibTokenStake1.sol\":{\"keccak256\":\"0x028cff5279563679070c2a7dab964bd814c42bc08574a9dd41eb600cae2983b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://aad14c076d424f230c4309f2cfbaa7951a34071a1b8f51d73bb14d1fba8fb7af\",\"dweb:/ipfs/QmTrSwR1kt3HqE9WV3X1EjC1p2cBqSWd5jnyVpcb2ctrEP\"]},\"/Users/zena/ico2.0/ico20-contracts/contracts/stake/Stake1Storage.sol\":{\"keccak256\":\"0x3126d9e4574660429473537fa0e80a700072c2f49fc90252414a67c8d0472eab\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b594b13ad37e4f2a53aeeb92404ce64f603e637261fa6aac0711b30131f8c2ff\",\"dweb:/ipfs/QmNMinopZ6bm5iCrQNuKgAHWqkd6vpggXHjBxf57j6qQD6\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639010d07c116100a2578063b2d4d6a311610071578063b2d4d6a3146102b6578063ca15c873146102be578063d547741f146102db578063fbfa77cf14610307578063fc0c546a1461030f57610116565b80639010d07c146101f057806391d1485414610213578063a217fddf14610253578063acc3a9391461025b57610116565b806336568abe116100e957806336568abe1461018857806343b0934a146101b457806348cd4cb1146101d8578063567e98f9146101e057806375b238fc146101e857610116565b8063083c63231461011b5780632002727514610135578063248a9ca31461013d5780632f2ff15d1461015a575b600080fd5b610123610317565b60408051918252519081900360200190f35b61012361031d565b6101236004803603602081101561015357600080fd5b5035610323565b6101866004803603604081101561017057600080fd5b50803590602001356001600160a01b0316610338565b005b6101866004803603604081101561019e57600080fd5b50803590602001356001600160a01b03166103a4565b6101bc610405565b604080516001600160a01b039092168252519081900360200190f35b610123610414565b61012361041a565b610123610420565b6101bc6004803603604081101561020657600080fd5b5080359060200135610444565b61023f6004803603604081101561022957600080fd5b50803590602001356001600160a01b0316610465565b604080519115158252519081900360200190f35b61012361047d565b6102816004803603602081101561027157600080fd5b50356001600160a01b0316610482565b6040805196875260208701959095528585019390935260608501919091526080840152151560a0830152519081900360c00190f35b6101236104ba565b610123600480360360208110156102d457600080fd5b50356104c0565b610186600480360360408110156102f157600080fd5b50803590602001356001600160a01b03166104d7565b6101bc610530565b6101bc61053f565b60055481565b60035481565b6000908152600a602052604090206002015490565b6000828152600a602052604090206002015461035b9061035661054e565b610465565b6103965760405162461bcd60e51b815260040180806020018281038252602f81526020018061082d602f913960400191505060405180910390fd5b6103a08282610552565b5050565b6103ac61054e565b6001600160a01b0316816001600160a01b0316146103fb5760405162461bcd60e51b815260040180806020018281038252602f81526020018061088c602f913960400191505060405180910390fd5b6103a082826105bb565b6001546001600160a01b031681565b60045481565b60075481565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6000828152600a6020526040812061045c9083610624565b90505b92915050565b6000828152600a6020526040812061045c9083610630565b600081565b600860205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b60065481565b6000818152600a6020526040812061045f90610645565b6000828152600a60205260409020600201546104f59061035661054e565b6103fb5760405162461bcd60e51b815260040180806020018281038252603081526020018061085c6030913960400191505060405180910390fd5b6002546001600160a01b031681565b6000546001600160a01b031681565b3390565b6000828152600a6020526040902061056a9082610650565b156103a05761057761054e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152600a602052604090206105d39082610665565b156103a0576105e061054e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061045c838361067a565b600061045c836001600160a01b0384166106de565b600061045f826106f6565b600061045c836001600160a01b0384166106fa565b600061045c836001600160a01b038416610744565b815460009082106106bc5760405162461bcd60e51b815260040180806020018281038252602281526020018061080b6022913960400191505060405180910390fd5b8260000182815481106106cb57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600061070683836106de565b61073c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561045f565b50600061045f565b60008181526001830160205260408120548015610800578354600019808301919081019060009087908390811061077757fe5b906000526020600020015490508087600001848154811061079457fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806107c457fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061045f565b600091505061045f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220a5ed0a7d30b514cfbe3b4391dafde07baccc56820a2ea951c65308691c3e359764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80639010d07c116100a2578063b2d4d6a311610071578063b2d4d6a3146102b6578063ca15c873146102be578063d547741f146102db578063fbfa77cf14610307578063fc0c546a1461030f57610116565b80639010d07c146101f057806391d1485414610213578063a217fddf14610253578063acc3a9391461025b57610116565b806336568abe116100e957806336568abe1461018857806343b0934a146101b457806348cd4cb1146101d8578063567e98f9146101e057806375b238fc146101e857610116565b8063083c63231461011b5780632002727514610135578063248a9ca31461013d5780632f2ff15d1461015a575b600080fd5b610123610317565b60408051918252519081900360200190f35b61012361031d565b6101236004803603602081101561015357600080fd5b5035610323565b6101866004803603604081101561017057600080fd5b50803590602001356001600160a01b0316610338565b005b6101866004803603604081101561019e57600080fd5b50803590602001356001600160a01b03166103a4565b6101bc610405565b604080516001600160a01b039092168252519081900360200190f35b610123610414565b61012361041a565b610123610420565b6101bc6004803603604081101561020657600080fd5b5080359060200135610444565b61023f6004803603604081101561022957600080fd5b50803590602001356001600160a01b0316610465565b604080519115158252519081900360200190f35b61012361047d565b6102816004803603602081101561027157600080fd5b50356001600160a01b0316610482565b6040805196875260208701959095528585019390935260608501919091526080840152151560a0830152519081900360c00190f35b6101236104ba565b610123600480360360208110156102d457600080fd5b50356104c0565b610186600480360360408110156102f157600080fd5b50803590602001356001600160a01b03166104d7565b6101bc610530565b6101bc61053f565b60055481565b60035481565b6000908152600a602052604090206002015490565b6000828152600a602052604090206002015461035b9061035661054e565b610465565b6103965760405162461bcd60e51b815260040180806020018281038252602f81526020018061082d602f913960400191505060405180910390fd5b6103a08282610552565b5050565b6103ac61054e565b6001600160a01b0316816001600160a01b0316146103fb5760405162461bcd60e51b815260040180806020018281038252602f81526020018061088c602f913960400191505060405180910390fd5b6103a082826105bb565b6001546001600160a01b031681565b60045481565b60075481565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6000828152600a6020526040812061045c9083610624565b90505b92915050565b6000828152600a6020526040812061045c9083610630565b600081565b600860205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b60065481565b6000818152600a6020526040812061045f90610645565b6000828152600a60205260409020600201546104f59061035661054e565b6103fb5760405162461bcd60e51b815260040180806020018281038252603081526020018061085c6030913960400191505060405180910390fd5b6002546001600160a01b031681565b6000546001600160a01b031681565b3390565b6000828152600a6020526040902061056a9082610650565b156103a05761057761054e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152600a602052604090206105d39082610665565b156103a0576105e061054e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061045c838361067a565b600061045c836001600160a01b0384166106de565b600061045f826106f6565b600061045c836001600160a01b0384166106fa565b600061045c836001600160a01b038416610744565b815460009082106106bc5760405162461bcd60e51b815260040180806020018281038252602281526020018061080b6022913960400191505060405180910390fd5b8260000182815481106106cb57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600061070683836106de565b61073c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561045f565b50600061045f565b60008181526001830160205260408120548015610800578354600019808301919081019060009087908390811061077757fe5b906000526020600020015490508087600001848154811061079457fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806107c457fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061045f565b600091505061045f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220a5ed0a7d30b514cfbe3b4391dafde07baccc56820a2ea951c65308691c3e359764736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "291:415:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "291:415:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:23:16;;;:::i;:::-;;;;;;;;;;;;;;;;447:29;;;:::i;4280:112:23:-;;;;;;;;;;;;;;;;-1:-1:-1;4280:112:23;;:::i;4642:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4642:223:23;;;;;;-1:-1:-1;;;;;4642:223:23;;:::i;:::-;;5816:205;;;;;;;;;;;;;;;;-1:-1:-1;5816:205:23;;;;;;-1:-1:-1;;;;;5816:205:23;;:::i;317:23:16:-;;;:::i;:::-;;;;-1:-1:-1;;;;;317:23:16;;;;;;;;;;;;;;482:25;;;:::i;644:32::-;;;:::i;354:55:0:-;;;:::i;3963:136:23:-;;;;;;;;;;;;;;;;-1:-1:-1;3963:136:23;;;;;;;:::i;2948:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2948:137:23;;;;;;-1:-1:-1;;;;;2948:137:23;;:::i;:::-;;;;;;;;;;;;;;;;;;1725:49;;;:::i;732:65:16:-;;;;;;;;;;;;;;;;-1:-1:-1;732:65:16;-1:-1:-1;;;;;732:65:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:33;;;:::i;3253:125:23:-;;;;;;;;;;;;;;;;-1:-1:-1;3253:125:23;;:::i;5099:226::-;;;;;;;;;;;;;;;;-1:-1:-1;5099:226:23;;;;;;-1:-1:-1;;;;;5099:226:23;;:::i;346:20:16:-;;;:::i;215:::-;;;:::i;513:23::-;;;;:::o;447:29::-;;;;:::o;4280:112:23:-;4337:7;4363:12;;;:6;:12;;;;;:22;;;;4280:112::o;4642:223::-;4733:12;;;;:6;:12;;;;;:22;;;4725:45;;4757:12;:10;:12::i;:::-;4725:7;:45::i;:::-;4717:105;;;;-1:-1:-1;;;4717:105:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4833:25;4844:4;4850:7;4833:10;:25::i;:::-;4642:223;;:::o;5816:205::-;5913:12;:10;:12::i;:::-;-1:-1:-1;;;;;5902:23:23;:7;-1:-1:-1;;;;;5902:23:23;;5894:83;;;;-1:-1:-1;;;5894:83:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:26;6000:4;6006:7;5988:11;:26::i;317:23:16:-;;;-1:-1:-1;;;;;317:23:16;;:::o;482:25::-;;;;:::o;644:32::-;;;;:::o;354:55:0:-;391:18;354:55;:::o;3963:136:23:-;4036:7;4062:12;;;:6;:12;;;;;:30;;4086:5;4062:23;:30::i;:::-;4055:37;;3963:136;;;;;:::o;2948:137::-;3017:4;3040:12;;;:6;:12;;;;;:38;;3070:7;3040:29;:38::i;1725:49::-;1770:4;1725:49;:::o;732:65:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;605:33::-;;;;:::o;3253:125:23:-;3316:7;3342:12;;;:6;:12;;;;;:29;;:27;:29::i;5099:226::-;5191:12;;;;:6;:12;;;;;:22;;;5183:45;;5215:12;:10;:12::i;5183:45::-;5175:106;;;;-1:-1:-1;;;5175:106:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:20:16;;;-1:-1:-1;;;;;346:20:16;;:::o;215:::-;;;-1:-1:-1;;;;;215:20:16;;:::o;598:104:22:-;685:10;598:104;:::o;7023:184:23:-;7096:12;;;;:6;:12;;;;;:33;;7121:7;7096:24;:33::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:23;7168:7;-1:-1:-1;;;;;7150:40:23;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;7213:188::-;7287:12;;;;:6;:12;;;;;:36;;7315:7;7287:27;:36::i;:::-;7283:112;;;7371:12;:10;:12::i;:::-;-1:-1:-1;;;;;7344:40:23;7362:7;-1:-1:-1;;;;;7344:40:23;7356:4;7344:40;;;;;;;;;;7213:188;;:::o;7650:147:31:-;7724:7;7766:22;7770:3;7782:5;7766:3;:22::i;6966:156::-;7046:4;7069:46;7079:3;-1:-1:-1;;;;;7099:14:31;;7069:9;:46::i;7203:115::-;7266:7;7292:19;7300:3;7292:7;:19::i;6429:141::-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:31;;6522:4;:41::i;6738:147::-;6811:4;6834:44;6842:3;-1:-1:-1;;;;;6862:14:31;;6834:7;:44::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:31;;;;-1:-1:-1;;;4538:73:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:31;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:31;2015:12;;2212:1512;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:31;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n//import { ERC165 } from \"@openzeppelin/contracts/introspection/ERC165.sol\";\nimport \"../stake/Stake1Storage.sol\";\n\n/// @title The connector that integrates zkopru and tokamak\ncontract AbstractStaker is Stake1Storage, AccessControl {\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN\");\n\n    modifier nonZero(address _addr) {\n        require(_addr != address(0), \"TokamakStaker: zero address\");\n        _;\n    }\n    modifier onlyOwner() {\n        require(\n            hasRole(ADMIN_ROLE, msg.sender),\n            \"TokamakStaker: Caller is not an admin\"\n        );\n        _;\n    }\n}\n\n",
  "sourcePath": "/Users/zena/ico2.0/ico20-contracts/contracts/connection/AbstractStaker.sol",
  "ast": {
    "absolutePath": "/Users/zena/ico2.0/ico20-contracts/contracts/connection/AbstractStaker.sol",
    "exportedSymbols": {
      "AbstractStaker": [
        43
      ],
      "AccessControl": [
        5606
      ],
      "Address": [
        6578
      ],
      "Context": [
        5323
      ],
      "EnumerableSet": [
        7058
      ],
      "LibTokenStake1": [
        2123
      ],
      "Stake1Storage": [
        3321
      ]
    },
    "id": 44,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 44,
        "sourceUnit": 5607,
        "src": "57:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/zena/ico2.0/ico20-contracts/contracts/stake/Stake1Storage.sol",
        "file": "../stake/Stake1Storage.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 44,
        "sourceUnit": 3322,
        "src": "193:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Stake1Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3321,
              "src": "318:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Stake1Storage_$3321",
                "typeString": "contract Stake1Storage"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "318:13:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5606,
              "src": "333:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$5606",
                "typeString": "contract AccessControl"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "333:13:0"
          }
        ],
        "contractDependencies": [
          3321,
          5323,
          5606
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "231:60:0",
          "text": "@title The connector that integrates zkopru and tokamak"
        },
        "fullyImplemented": true,
        "id": 43,
        "linearizedBaseContracts": [
          43,
          5606,
          5323,
          3321
        ],
        "name": "AbstractStaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 13,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 43,
            "src": "354:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e",
                  "id": 11,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "401:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  },
                  "value": "ADMIN"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "typeString": "literal_string \"ADMIN\""
                  }
                ],
                "id": 10,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "391:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "391:18:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "448:87:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "466:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "483:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "475:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "475:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "475:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "466:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b616d616b5374616b65723a207a65726f2061646472657373",
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "487:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017d07e6473f1d651ab98a7ae8b7e33487f88aeda48588672fef5c5fdc3ac8c9",
                          "typeString": "literal_string \"TokamakStaker: zero address\""
                        },
                        "value": "TokamakStaker: zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_017d07e6473f1d651ab98a7ae8b7e33487f88aeda48588672fef5c5fdc3ac8c9",
                          "typeString": "literal_string \"TokamakStaker: zero address\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "458:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "458:59:0"
                },
                {
                  "id": 27,
                  "nodeType": "PlaceholderStatement",
                  "src": "527:1:0"
                }
              ]
            },
            "id": 29,
            "name": "nonZero",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "433:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:15:0"
            },
            "src": "416:119:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "561:143:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "600:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 34,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "612:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "612:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 32,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5395,
                          "src": "592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "592:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b616d616b5374616b65723a2043616c6c6572206973206e6f7420616e2061646d696e",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "637:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adc86226cee2370a78c20adf7b0c497a163025ed491758f5afaadf3ffebd49cc",
                          "typeString": "literal_string \"TokamakStaker: Caller is not an admin\""
                        },
                        "value": "TokamakStaker: Caller is not an admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adc86226cee2370a78c20adf7b0c497a163025ed491758f5afaadf3ffebd49cc",
                          "typeString": "literal_string \"TokamakStaker: Caller is not an admin\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "571:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "571:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "571:115:0"
                },
                {
                  "id": 40,
                  "nodeType": "PlaceholderStatement",
                  "src": "696:1:0"
                }
              ]
            },
            "id": 42,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:2:0"
            },
            "src": "540:164:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 44,
        "src": "291:415:0"
      }
    ],
    "src": "32:676:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/zena/ico2.0/ico20-contracts/contracts/connection/AbstractStaker.sol",
      "exportedSymbols": {
        "AbstractStaker": [
          43
        ],
        "AccessControl": [
          5606
        ],
        "Address": [
          6578
        ],
        "Context": [
          5323
        ],
        "EnumerableSet": [
          7058
        ],
        "LibTokenStake1": [
          2123
        ],
        "Stake1Storage": [
          3321
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".6"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 5607,
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "file": "@openzeppelin/contracts/access/AccessControl.sol",
          "scope": 44,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "57:58:0"
      },
      {
        "attributes": {
          "SourceUnit": 3322,
          "absolutePath": "/Users/zena/ico2.0/ico20-contracts/contracts/stake/Stake1Storage.sol",
          "file": "../stake/Stake1Storage.sol",
          "scope": 44,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "193:36:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3321,
            5323,
            5606
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            43,
            5606,
            5323,
            3321
          ],
          "name": "AbstractStaker",
          "scope": 44
        },
        "children": [
          {
            "attributes": {
              "text": "@title The connector that integrates zkopru and tokamak"
            },
            "id": 4,
            "name": "StructuredDocumentation",
            "src": "231:60:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Stake1Storage",
                  "referencedDeclaration": 3321,
                  "type": "contract Stake1Storage"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "318:13:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "318:13:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "AccessControl",
                  "referencedDeclaration": 5606,
                  "type": "contract AccessControl"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "333:13:0"
              }
            ],
            "id": 8,
            "name": "InheritanceSpecifier",
            "src": "333:13:0"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "75b238fc",
              "mutability": "constant",
              "name": "ADMIN_ROLE",
              "scope": 43,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 9,
                "name": "ElementaryTypeName",
                "src": "354:7:0"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                          "typeString": "literal_string \"ADMIN\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4294967288,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 10,
                    "name": "Identifier",
                    "src": "391:9:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "41444d494e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"ADMIN\"",
                      "value": "ADMIN"
                    },
                    "id": 11,
                    "name": "Literal",
                    "src": "401:7:0"
                  }
                ],
                "id": 12,
                "name": "FunctionCall",
                "src": "391:18:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "354:55:0"
          },
          {
            "attributes": {
              "name": "nonZero",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_addr",
                      "scope": 29,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "433:7:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "433:13:0"
                  }
                ],
                "id": 16,
                "name": "ParameterList",
                "src": "432:15:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_017d07e6473f1d651ab98a7ae8b7e33487f88aeda48588672fef5c5fdc3ac8c9",
                                  "typeString": "literal_string \"TokamakStaker: zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 17,
                            "name": "Identifier",
                            "src": "458:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "address",
                                  "value": "_addr"
                                },
                                "id": 18,
                                "name": "Identifier",
                                "src": "466:5:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 19,
                                        "name": "ElementaryTypeName",
                                        "src": "475:7:0"
                                      }
                                    ],
                                    "id": 20,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "475:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 21,
                                    "name": "Literal",
                                    "src": "483:1:0"
                                  }
                                ],
                                "id": 22,
                                "name": "FunctionCall",
                                "src": "475:10:0"
                              }
                            ],
                            "id": 23,
                            "name": "BinaryOperation",
                            "src": "466:19:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546f6b616d616b5374616b65723a207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"TokamakStaker: zero address\"",
                              "value": "TokamakStaker: zero address"
                            },
                            "id": 24,
                            "name": "Literal",
                            "src": "487:29:0"
                          }
                        ],
                        "id": 25,
                        "name": "FunctionCall",
                        "src": "458:59:0"
                      }
                    ],
                    "id": 26,
                    "name": "ExpressionStatement",
                    "src": "458:59:0"
                  },
                  {
                    "id": 27,
                    "name": "PlaceholderStatement",
                    "src": "527:1:0"
                  }
                ],
                "id": 28,
                "name": "Block",
                "src": "448:87:0"
              }
            ],
            "id": 29,
            "name": "ModifierDefinition",
            "src": "416:119:0"
          },
          {
            "attributes": {
              "name": "onlyOwner",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 30,
                "name": "ParameterList",
                "src": "558:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_adc86226cee2370a78c20adf7b0c497a163025ed491758f5afaadf3ffebd49cc",
                                  "typeString": "literal_string \"TokamakStaker: Caller is not an admin\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "571:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5395,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 32,
                                "name": "Identifier",
                                "src": "592:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "bytes32",
                                  "value": "ADMIN_ROLE"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "600:10:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 34,
                                    "name": "Identifier",
                                    "src": "612:3:0"
                                  }
                                ],
                                "id": 35,
                                "name": "MemberAccess",
                                "src": "612:10:0"
                              }
                            ],
                            "id": 36,
                            "name": "FunctionCall",
                            "src": "592:31:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546f6b616d616b5374616b65723a2043616c6c6572206973206e6f7420616e2061646d696e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"TokamakStaker: Caller is not an admin\"",
                              "value": "TokamakStaker: Caller is not an admin"
                            },
                            "id": 37,
                            "name": "Literal",
                            "src": "637:39:0"
                          }
                        ],
                        "id": 38,
                        "name": "FunctionCall",
                        "src": "571:115:0"
                      }
                    ],
                    "id": 39,
                    "name": "ExpressionStatement",
                    "src": "571:115:0"
                  },
                  {
                    "id": 40,
                    "name": "PlaceholderStatement",
                    "src": "696:1:0"
                  }
                ],
                "id": 41,
                "name": "Block",
                "src": "561:143:0"
              }
            ],
            "id": 42,
            "name": "ModifierDefinition",
            "src": "540:164:0"
          }
        ],
        "id": 43,
        "name": "ContractDefinition",
        "src": "291:415:0"
      }
    ],
    "id": 44,
    "name": "SourceUnit",
    "src": "32:676:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-08T14:29:21.181Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "title": "The connector that integrates zkopru and tokamak",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}